/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'https://github.com/OmSao' at ''7/17/18 7:18 PM' with Gradle 2.13
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.13/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: "war"
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'

// In this section you declare where to find the dependencies of your project
buildscript {
    ext {
        dl4j_version = "0.9.1"
        //kotlin_version = "1.1.2"
    }
    repositories {
    	jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        mavenCentral()
        
    }
    //dependencies {
      //  classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
    //}
}
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    
}

	
/*jar {
  manifest.attributes 'Class-Path':configurations.runtime.files.collect { "./testLib" }
}*/

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'    
    
	// https://mvnrepository.com/artifact/com.github.cliftonlabs/json-simple
	compile group: 'com.github.cliftonlabs', name: 'json-simple', version: '2.1.2'
	
	// https://mvnrepository.com/artifact/commons-collections/commons-collections
	compile group: 'commons-collections', name: 'commons-collections', version: '3.2.1'
	
	// https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-server
	compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.22.1'
	compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.22.1'
	//compile group: 'org.glassfish.jersey.core', name: 'jersey-common', version: '2.22.1'
	//compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.2'
	compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0.1'
	//compile group: 'org.glassfish.hk2', name: 'hk2-api', version: '2.2.0'
	//compile group: 'org.glassfish.hk2', name: 'hk2-locator', version: '2.2.0'
	//compile group: 'org.glassfish.hk2', name: 'osgi-resource-locator', version: '1.0.1'
	//compile group: 'org.glassfish.hk2.external', name: 'javax.inject', version: '2.2.0'
	//compile group: 'org.glassfish.jersey.bundles.repackaged', name: 'jersey-guava', version: '2.6'
	
	compile group: 'org.apache.commons', name: 'commons-pool2', version: '2.5.0'
	
	//compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    compile "org.deeplearning4j:deeplearning4j-core:${dl4j_version}"
    compile "org.deeplearning4j:deeplearning4j-nlp:${dl4j_version}"
    compile "org.nd4j:nd4j-native-platform:0.9.1"

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

war {
        //baseName = 'gat-dl4j-example'
		baseName = 'MicroServices_DL4J_TF'
        extension = 'war'

        from ('public_html') {
        	include '*.html'
        }
        
        from ('lib') {
        	include '*.jar' into ('WEB-INF/lib')
    	}
    	
        webInf { from 'public_html/WEB-INF' } // adds a file-set to the WEB-INF dir.
        from('src/main/java') {
            include '**/*.properties' into ('WEB-INF/classes')
            include 'META-INF/*' into ('WEB-INF/classes')
    	}
}
